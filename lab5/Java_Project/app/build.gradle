/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'com.github.davidmc24.gradle.plugin.avro' version '1.9.1'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        url "https://packages.confluent.io/maven"
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    implementation group: 'org.apache.kafka', name: 'kafka-clients', version: '3.6.0'

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.9'
    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.4.11'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.4.11'

    implementation 'io.confluent:kafka-json-serializer:7.5.1'
    implementation group: 'io.confluent', name: 'kafka-avro-serializer', version: '7.5.1'
}

application {
    // Define the main class for the application.
    mainClass = 'l4.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
